{"ast":null,"code":"import _toConsumableArray from \"/home/wilker/Desktop/cashFlowVue/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport { toRefs, computed, ref } from 'vue';\nexport default {\n  __name: 'GraphicComp',\n  props: {\n    amounts: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    }\n  },\n  emits: [\"select\"],\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose,\n      __emit = _ref.emit;\n    __expose();\n    var props = __props;\n    var _toRefs = toRefs(props),\n      amounts = _toRefs.amounts;\n    var amountToPixels = function amountToPixels(amount) {\n      var min = Math.min.apply(Math, _toConsumableArray(amounts.value));\n      var max = Math.max.apply(Math, _toConsumableArray(amounts.value));\n      var amountAbs = amount + Math.abs(min);\n      var minmax = Math.abs(max) + Math.abs(min);\n      return 200 - amountAbs * 100 / minmax * 2;\n    };\n    var zero = computed(function () {\n      return amountToPixels(0);\n    });\n    var points = computed(function () {\n      var total = amounts.value.length;\n      return amounts.value.reduce(function (points, amount, i) {\n        var x = 300 / total * (i + 1);\n        var y = amountToPixels(amount);\n        return \"\".concat(points, \" \").concat(x, \",\").concat(y);\n      }, \"0,100\");\n    });\n    var showPointer = ref(false);\n    var pointer = ref(0);\n    var emit = __emit;\n    var tap = function tap(_ref2) {\n      var target = _ref2.target,\n        touches = _ref2.touches;\n      showPointer.value = true;\n      // console.log(target, touches);  target y touches son elementos js\n      var elementWidth = target.getBoundingClientRect().width;\n      var elementX = target.getBoundingClientRect().x;\n      var touchX = touches[0].clientX;\n      pointer.value = (touchX - elementX) * 300 / elementWidth;\n    };\n    var untap = function untap() {\n      showPointer.value = false;\n    };\n    var __returned__ = {\n      props: props,\n      amounts: amounts,\n      amountToPixels: amountToPixels,\n      zero: zero,\n      points: points,\n      showPointer: showPointer,\n      pointer: pointer,\n      emit: emit,\n      tap: tap,\n      untap: untap,\n      toRefs: toRefs,\n      computed: computed,\n      ref: ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["toRefs","computed","ref","props","__props","_toRefs","amounts","amountToPixels","amount","min","Math","apply","_toConsumableArray","value","max","amountAbs","abs","minmax","zero","points","total","length","reduce","i","x","y","concat","showPointer","pointer","emit","__emit","tap","_ref2","target","touches","elementWidth","getBoundingClientRect","width","elementX","touchX","clientX","untap"],"sources":["/home/wilker/Desktop/cashFlowVue/src/components/Resume/GraphicComp.vue"],"sourcesContent":["<template>\n    <div class=\"graficoStyle\">\n        <svg \n            @touchstart=\"tap\"\n            @touchmove=\"tap\"\n            @touchend=\"untap\"\n            viewBox=\"0 0 300 200\"\n        >\n            <line\n                stroke=\"#c4c4c4\"\n                stroke-width=\"3\"\n                x1=\"0\"\n                :y1=\"zero\"\n                x2=\"300\"\n                :y2=\"zero\"\n            />\n            <polyline\n                fill=\"none\"\n                stroke=\"#0689B0\"\n                stroke-width=\"2\"\n                :points=\"points\"\n            />\n            <line\n                v-show=\"showPointer\"\n                stroke=\"#04B500\"\n                stroke-width=\"2\"\n                :x1=\"pointer\"\n                y1=\"0\"\n                :x2=\"pointer\"\n                y2=\"200\"\n            />\n        </svg>\n        <p>Ultimos 30 d√≠as</p>\n        <p>{{  amounts[8] }}</p>\n    </div>\n</template>\n\n<script setup>\nimport { defineProps, toRefs, computed, ref} from 'vue';\n\nconst props = defineProps({\n    amounts: {\n        type: Array,\n        default: ()=>[]\n    }\n});\n\nconst { amounts } = toRefs(props);\n\nconst amountToPixels = (amount) => {\n    const min = Math.min(...amounts.value);\n    const max = Math.max(...amounts.value);\n\n    const amountAbs = amount + Math.abs(min);\n    const minmax = Math.abs(max) + Math.abs(min);\n\n    return 200 - (((amountAbs * 100) / minmax) *2)\n}\n\nconst zero = computed(()=>{\n    return amountToPixels(0)\n} )\n\nconst points = computed(()=> {\n    const total = amounts.value.length;\n\n    return amounts.value.reduce((points,amount,i) => {\n        const x = (300/total)*(i+1);\n        const y = amountToPixels(amount);\n        return `${points} ${x},${y}`\n    }, \"0,100\" )\n})\n\nconst showPointer = ref(false);\nconst pointer = ref (0)\n\nconst emit = defineEmits([\"select\"])\n\nconst tap = ({target, touches}) => {\n    showPointer.value = true;\n    // console.log(target, touches);  target y touches son elementos js\n    const elementWidth = target.getBoundingClientRect().width;\n    const elementX= target.getBoundingClientRect().x;\n    const touchX = touches[0].clientX;\n\n    pointer.value = ((touchX - elementX) *300)/ elementWidth;\n}\n\nconst untap = () => {\n    showPointer.value = false;\n}\n\n</script>\n\n<style>\n.graficoStyle {\n    display: flex;\n    flex-direction: column;\n    padding: 0;\n    margin: 0;\n}\nsvg {\n    width: 100%;\n    border: 1px solid black\n}\np { \n    text-align: center;\n}\n</style>"],"mappings":";;;;;AAsCA,SAAsBA,MAAM,EAAEC,QAAQ,EAAEC,GAAG,QAAO,KAAK;;;;;;;;;;;;;;;;IAEvD,IAAMC,KAAK,GAAGC,OAKZ;IAEF,IAAAC,OAAA,GAAoBL,MAAM,CAACG,KAAK,CAAC;MAAzBG,OAAO,GAAAD,OAAA,CAAPC,OAAO;IAEf,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,MAAM,EAAK;MAC/B,IAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAAE,KAAA,CAARD,IAAI,EAAAE,kBAAA,CAAQN,OAAO,CAACO,KAAK,EAAC;MACtC,IAAMC,GAAG,GAAGJ,IAAI,CAACI,GAAG,CAAAH,KAAA,CAARD,IAAI,EAAAE,kBAAA,CAAQN,OAAO,CAACO,KAAK,EAAC;MAEtC,IAAME,SAAS,GAAGP,MAAM,GAAGE,IAAI,CAACM,GAAG,CAACP,GAAG,CAAC;MACxC,IAAMQ,MAAM,GAAGP,IAAI,CAACM,GAAG,CAACF,GAAG,CAAC,GAAGJ,IAAI,CAACM,GAAG,CAACP,GAAG,CAAC;MAE5C,OAAO,GAAG,GAAMM,SAAS,GAAG,GAAG,GAAIE,MAAM,GAAG,CAAE;IAClD,CAAC;IAED,IAAMC,IAAI,GAAGjB,QAAQ,CAAC,YAAI;MACtB,OAAOM,cAAc,CAAC,CAAC,CAAC;IAC5B,CAAE,CAAC;IAEH,IAAMY,MAAM,GAAGlB,QAAQ,CAAC,YAAK;MACzB,IAAMmB,KAAK,GAAGd,OAAO,CAACO,KAAK,CAACQ,MAAM;MAElC,OAAOf,OAAO,CAACO,KAAK,CAACS,MAAM,CAAC,UAACH,MAAM,EAACX,MAAM,EAACe,CAAC,EAAK;QAC7C,IAAMC,CAAC,GAAI,GAAG,GAACJ,KAAK,IAAGG,CAAC,GAAC,CAAC,CAAC;QAC3B,IAAME,CAAC,GAAGlB,cAAc,CAACC,MAAM,CAAC;QAChC,UAAAkB,MAAA,CAAUP,MAAM,OAAAO,MAAA,CAAIF,CAAC,OAAAE,MAAA,CAAID,CAAC;MAC9B,CAAC,EAAE,OAAQ,CAAC;IAChB,CAAC,CAAC;IAEF,IAAME,WAAW,GAAGzB,GAAG,CAAC,KAAK,CAAC;IAC9B,IAAM0B,OAAO,GAAG1B,GAAG,CAAE,CAAC,CAAC;IAEvB,IAAM2B,IAAI,GAAGC,MAAuB;IAEpC,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAAC,KAAA,EAA0B;MAAA,IAArBC,MAAM,GAAAD,KAAA,CAANC,MAAM;QAAEC,OAAO,GAAAF,KAAA,CAAPE,OAAO;MACzBP,WAAW,CAACd,KAAK,GAAG,IAAI;MACxB;MACA,IAAMsB,YAAY,GAAGF,MAAM,CAACG,qBAAqB,CAAC,CAAC,CAACC,KAAK;MACzD,IAAMC,QAAQ,GAAEL,MAAM,CAACG,qBAAqB,CAAC,CAAC,CAACZ,CAAC;MAChD,IAAMe,MAAM,GAAGL,OAAO,CAAC,CAAC,CAAC,CAACM,OAAO;MAEjCZ,OAAO,CAACf,KAAK,GAAI,CAAC0B,MAAM,GAAGD,QAAQ,IAAG,GAAG,GAAGH,YAAY;IAC5D,CAAC;IAED,IAAMM,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAS;MAChBd,WAAW,CAACd,KAAK,GAAG,KAAK;IAC7B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}